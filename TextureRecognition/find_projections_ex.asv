function [P,nPs] = find_projections_ex(src)
global eigentargets sMins sMaxs sCounts sCoeffs aCoeffs Coeffs Msk sc;
global target_s target_s2 si f mean_target Emax objects objects_count objs max_th mask I is_learning global_scale n_targets0 n_objects;
P = zeros(100,2,n_targets0);
nPs = zeros(1,n_targets0);

[h,w] = size(src);
H = h-target_s+1;
W = w-target_s+1;
if(min(H,W) < 1)
    return;
end;
[hm,wm] = size(Msk);
%% find all expected squares
proj = find_projections2(src);
k1 = 0;
for y0=1:size(proj,1)
    for x0=1:size(proj,2)
        X0 = round(proj(y0,x0,1,1);
        Y0 = proj(y0,x0,2,1);
        x = sc*round(-sMins(1)+X0)+1;
        y = sc*round(-sMins(2)+Y0)+1;
        if((x >= 1) && (x <= wm) && (y >= 1) && (y <= hm))
            if(Msk(y,x) ~= 0)
                k1 = k1 + 1;
                P(k1,1,1) = X0;
                P(k1,2,1) = Y0;
            end;
        end;
    end;
end;
nPs(1,1) = k1;
%% EOF